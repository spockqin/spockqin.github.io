{"version":3,"sources":["components/TopNav/index.js","components/TopNav/TopNav.js","components/Layout/styles.js","components/Layout/index.js","components/Layout/Layout.js","styles.js","pages/About/styles.js","pages/About/About.js","pages/About/index.js","pages/Experiences/styles.js","pages/Experiences/Experiences.js","pages/Experiences/index.js","pages/Articles/index.js","pages/Articles/Articles.js","pages/index.js","App.js","serviceWorker.js","index.js","images/portrait.jpg"],"names":["TopNav","Navbar","bg","variant","expand","Brand","style","fontSize","Toggle","aria-controls","Collapse","id","Nav","className","Link","href","StyledContent","styled","Content","Layout","children","h3","Paragraph","p","span","gray","IconsContainer","div","Image","img","a","Mobile","useMediaQuery","maxWidth","Default","minWidth","user","src","portrait","alt","margin","display","alignItems","basics","summary","url","bgColor","fgColor","height","width","About","flexDirection","WorkItem","li","white","WorkTitle","h4","JobTitle","exps","position","company","startYear","endYear","Experiences","map","exp","i","key","Articles","Pages","exact","path","App","useState","setUser","useEffect","fetch","then","result","json","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.f57170d3.chunk.js","sourcesContent":["import TopNav from \"./TopNav\"\nexport default TopNav\n","import React from 'react';\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\n\nconst TopNav = () => {\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n      <Navbar.Brand style={{fontSize: 30}}>Tian Qin</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\" style={{fontSize: 20}}>\n          <Nav.Link href=\"/\">About</Nav.Link>\n          <Nav.Link href=\"/exps\">Experiences</Nav.Link>\n          <Nav.Link href=\"/articles\">Articles</Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default TopNav;\n\n// <NavDropdown title=\"Articles\" id=\"basic-nav-dropdown\">\n//   <NavDropdown.Item href=\"/articles/3.1\">1</NavDropdown.Item>\n//   <NavDropdown.Item href=\"/articles/3.2\">2</NavDropdown.Item>\n// </NavDropdown>\n","import styled from 'styled-components'\nimport { Content } from 'carbon-components-react/lib/components/UIShell'\n\nexport const StyledContent = styled(Content)`\n  min-height: 100vh;\n  @media (max-width: 640px) {\n    margin-left: 0 !important;\n  }\n`","import Layout from './Layout'\nexport default Layout","import React from 'react';\nimport TopNav from '../TopNav';\n\nimport { StyledContent } from './styles';\n\nconst Layout = ({ children }) => {\n  return (\n    <>\n      <TopNav />\n      <StyledContent>\n        <div>{children}</div>\n      </StyledContent>\n    </>\n  );\n};\n\nexport default Layout;\n","import styled from 'styled-components';\nimport { gray } from '@carbon/colors';\n\nexport const SectionTitle = styled.h3`\n  margin-top: 1.5rem;\n  margin-bottom: 0.5rem;\n`;\n\nexport const Paragraph = styled.p`\n  white-space: pre-wrap;\n`;\n\nexport const Block = styled.span`\n  display: inline-block;\n  margin-right: 0.75rem;\n  margin-bottom: 0.75rem;\n  padding: 0.5rem 1rem;\n  background-color: ${gray[20]};\n  color: ${gray[70]};\n  border: 3px solid ${gray[70]};\n  border-radius: 2px;\n  font-weight: bold;\n`;","import styled from 'styled-components'\n\nexport const IconsContainer = styled.div`\n  margin-top: 1.2rem;\n`;\n\nexport const Image = styled.img`\n  height: 77%;\n  width: 77%;\n  max-width: 400px;\n  max-height: 400px;\n  margin-right: 1rem;\n  border-radius: 2px;\n  display: inline-block;\n`;\n\nexport const ViewResumeLink = styled.a`\n  display: flex;\n  text-decoration: none;\n  padding: 0.75rem 1.5rem;\n  font-weight: bold;\n  align-items: center;\n  margin-top: 1rem;\n  border: 2px solid #2ecc40;\n  background-color: rgba(46, 204, 64, 0.3);\n  transition: background-color 250ms ease;\n  &:hover {\n    background-color: #2ecc40;\n  }\n  svg {\n    fill: white;\n    margin-left: 8px;\n  }\n`;\n","import React from 'react';\nimport { SocialIcon } from 'react-social-icons';\nimport { useMediaQuery } from 'react-responsive'\n\nimport Layout from '../../components/Layout';\nimport { Paragraph } from '../../styles';\nimport { IconsContainer, Image } from './styles';\nimport portrait from '../../images/portrait.jpg';\n\n// mobile\nconst Mobile = ({ children }) => {\n  const isMobile = useMediaQuery({ maxWidth: 767 })\n  return isMobile ? children : null\n}\n// not mobile, i.e. desktop or laptop or tablet\nconst Default = ({ children }) => {\n  const isNotMobile = useMediaQuery({ minWidth: 768 })\n  return isNotMobile ? children : null\n}\n\nconst Content = ({ user }) => {\n  return (\n    <>\n      <Image src={portrait} alt=\"portrait\" />\n      <div style={{margin: 30, display: 'flex', alignItems: 'center'}}>\n        <div>\n          <Paragraph>{user.basics.summary}</Paragraph>\n          <IconsContainer>\n              <SocialIcon url=\"https://www.linkedin.com/in/tianqin\"\n                bgColor=\"#757D75\" fgColor=\"#ffffff\"\n                style={{ height: 35, width: 35, margin: 6 }}\n              />\n              <SocialIcon url=\"https://github.com/spockqin\"\n                bgColor=\"#757D75\" fgColor=\"#ffffff\"\n                style={{ height: 35, width: 35, margin: 6 }}\n              />\n              <SocialIcon url=\"https://www.facebook.com/tian.qin.121\"\n                bgColor=\"#757D75\" fgColor=\"#ffffff\"\n                style={{ height: 35, width: 35, margin: 6 }}\n              />\n              <SocialIcon url=\"mailto:tianqinsc@gmail.com\"\n                bgColor=\"#757D75\" fgColor=\"#ffffff\"\n                style={{ height: 35, width: 35, margin: 6 }}\n              />\n          </IconsContainer>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst About = ({ user }) => {\n    return (\n        <Layout>\n          <Default>\n            <div style={{display: 'flex', flexDirection: 'row'}}>\n              <Content user={user} />\n            </div>\n          </Default>\n          <Mobile>\n            <div style={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\n              <Content user={user} />\n            </div>\n          </Mobile>\n        </Layout>\n    );\n};\n\nexport default About;\n","import About from './About'\nexport default About","import styled from 'styled-components'\nimport { white } from '@carbon/colors'\n\nexport const WorkItem = styled.li`\n  margin-top: 1rem;\n  padding-bottom: 1rem;\n  border-bottom: 1px solid ${white};\n`\n\nexport const WorkTitle = styled.h4`\n  font-weight: bold;\n`\n\nexport const JobTitle = styled.p`\n  font-weight: bold;\n  display: inline-block;\n`\n","import React from 'react';\nimport Layout from '../../components/Layout';\nimport { Paragraph } from '../../styles';\nimport { WorkItem, WorkTitle, JobTitle } from './styles';\n\nconst sum_amazon = `Currently a software engineer working on AWS at Amazon in Seattle.`\n\nconst sum_research = `After 3 years in the industry realm, I ventured into blockchain research to deeply \\\nunderstand consensus algorithms - the most foundational piece in distributed systems. Inspired by the \\\nclassic Practical Byzantine Fault Tolerance (pBFT) algorithm and the novel Snowball algorithm, \\\nmy teammates and I successfully designed, implemented, and tested a new consensus algorithm that merged the \\\nprobabilistic property of Snowball with the deterministic property of pBFT.`;\n\nconst sum_sutardja = `During my time at this innovation center at UC Berkeley, \\\nI lead research and development efforts collaborating with industry groups. \\\nOne notable project was with Volvo to build an autonomous localization and navigation system \\\nthat functions without GPS signals.`;\n\nconst sum_teaching = `I love teaching! Have taught discrete math, probability, blockchain \\\ninternet architecture at UC Berkeley and various on-campus organizations.`;\n\nconst sum_ifund = `Fascinated by how math and computer science tackle finance as in the case of Bitcoin, \\\nI decided to venture into quantitative research realm. At iFund, I sought out patterns underlying \\\nhigh frequency market data, developed robust machine learning models, and accordingly created \\\nsuccessful trading strategies. \\n\\nThis was my first big-scale data science project in the real world and \\\nI learned so many aspects not taught in school: how to correctly scrutinize raw data, how to efficiently set up \\\na quantitative research workflow, how to deal with many random nuances that come up as you label and process the data, etc.`;\n\nconst sum_block = `My team and I worked with companies such as Ford, ExxonMobil, and Qualcomm \\\nto build blockchain prototypes that tackle real-world problems that these companies face`;\n\nconst sum_indeed = `Really enjoyed my first internship as I learned many industry practices \\\nin software engineering and created an integrated application that facilitates financial and sales routines`;\n\nconst exps = [\n  {\n    position: \"Software Engineer\",\n    company: \"Amazon\",\n    startYear: \"08/2020\",\n    endYear: \"Present\",\n    summary: sum_amazon,\n  },\n  {\n    position: \"Consensus Algorithm Researcher\",\n    company: \"University of California, Berkeley\",\n    startYear: \"01/2019\",\n    endYear: \"06/2020\",\n    summary: sum_research,\n  },\n  {\n    position: \"Industry Lead\",\n    company: \"Sutardja Center for Entrepreneurship and Technology\",\n    startYear: \"08/2018\",\n    endYear: \"12/2019\",\n    summary: sum_sutardja,\n  },\n  {\n    position: \"Various Teaching Positions\",\n    company: \"University of California, Berkeley\",\n    startYear: \"08/2017\",\n    endYear: \"05/2020\",\n    summary: sum_teaching,\n  },\n  {\n    position: \"Quantitative Research Intern\",\n    company: \"iFund Asset Management\",\n    startYear: \"05/2019\",\n    endYear: \"08/2019\",\n    summary: sum_ifund,\n  },\n  {\n    position: \"Head of Product\",\n    company: \"Blockchain at Berkeley\",\n    startYear: \"01/2017\",\n    endYear: \"12/2018\",\n    summary: sum_block,\n  },\n  {\n    position: \"Software Engineering Intern\",\n    company: \"Indeed\",\n    startYear: \"05/2018\",\n    endYear: \"08/2018\",\n    summary: sum_indeed,\n  },\n];\n\nconst Experiences = () => {\n  return (\n    <Layout>\n      <div>\n        <ul>\n          {exps.map((exp, i) => (\n            <WorkItem key={i}>\n              <WorkTitle>{exp.position}</WorkTitle>\n              <div>\n                <JobTitle>{exp.company}</JobTitle>\n                <span> &sdot; </span>\n                <span>\n                  {exp.startYear} to {exp.endYear}\n                </span>\n              </div>\n              <br/>\n              <Paragraph>{exp.summary}</Paragraph>\n            </WorkItem>\n          ))}\n        </ul>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Experiences;\n","import Experiences from './Experiences'\nexport default Experiences\n","import Articles from './Articles'\nexport default Articles","import React from 'react';\nimport Layout from '../../components/Layout';\nimport { Paragraph } from '../../styles';\n\nconst Articles = () => {\n  return (\n    <Layout>\n      <div>\n        <Paragraph>coming soon!</Paragraph>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Articles;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport About from './About';\nimport Experiences from './Experiences';\nimport Articles from './Articles';\n\nconst Pages = ({ user }) => {\n    return (\n        <Router>\n            <Switch>\n                <Route exact path=\"/\">\n                    <About user={user} />\n                </Route>\n                <Route path=\"/exps\">\n                    <Experiences />\n                </Route>\n                <Route path=\"/articles\">\n                    <Articles />\n                </Route>\n            </Switch>\n        </Router>\n    );\n};\n\nexport default Pages;\n","import React, { useState, useEffect } from 'react';\nimport Pages from './pages';\n\nfunction App() {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    fetch('https://gitconnected.com/v1/portfolio/spockqin')\n      .then(result => result.json())\n      .then(user => {\n        setUser(user);\n      });\n  }, []);\n\n  if (!user) {\n    return <div />;\n  }\n\n  return <Pages user={user} />;\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/portrait.a404a60d.jpg\";"],"sourceRoot":""}